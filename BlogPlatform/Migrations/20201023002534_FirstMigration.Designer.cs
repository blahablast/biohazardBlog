// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blog_template_practice;

namespace BlogPlatform.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20201023002534_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("blog_template_practice.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "What's up with all these Zombies?!"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Spencer Mansion Updates"
                        },
                        new
                        {
                            Id = 3,
                            Name = "An underground laboratory?"
                        });
                });

            modelBuilder.Entity("blog_template_practice.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Jill Valentine",
                            Body = "Every where I go there is a zombie. Isn't there anyone human anymore??",
                            CategoryId = 1,
                            PublishDate = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Seems everyone these days is a Zombie..."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Barry Burton",
                            Body = "Thanks to Brad and his awful pilot skills, we have crashed and stuck in this creepy mansion!",
                            CategoryId = 2,
                            PublishDate = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "This mansion is dangerous!"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Chris Redfield",
                            Body = "I was just bored and inserted a couple of disks into statues that were hidden all too well... Next thing I know, I decending into an underground laboratory!",
                            CategoryId = 3,
                            PublishDate = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "So I drained a fountain and found a laboratory!"
                        });
                });

            modelBuilder.Entity("blog_template_practice.Models.Category", b =>
                {
                    b.HasOne("blog_template_practice.Models.Content", null)
                        .WithMany("Category")
                        .HasForeignKey("ContentId");
                });
#pragma warning restore 612, 618
        }
    }
}
